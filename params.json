{"name":"Entityframework.indexingextensions","tagline":"Indexing Extensions for EF6","body":"# EntityFramework.IndexingExtensions\r\nIndexing Extensions for Entity Framework 6\r\n\r\n\r\n### Installation\r\n\r\n```\r\nPM> Install-Package EntityFramework.IndexingExtensions\r\n```\r\n\r\n### Usage\r\n\r\n``` csharp\r\npublic class MyDataContext : DbContext\r\n{\r\n  protected override void OnModelCreating(DbModelBuilder modelBuilder)\r\n  {\r\n    modelBuilder.Entity<Customer>()\r\n        .HasIndex(\"IX_Customers_Name\",          // Provide the index name.\r\n            e => e.Property(x => x.LastName),   // Specify at least one column.\r\n            e => e.Property(x => x.FirstName))  // Multiple columns as desired.\r\n\r\n        .HasIndex(\"IX_Customers_EmailAddress\",  // Supports fluent chaining for more indexes.\r\n            IndexOptions.Unique,                // Supports flags for unique and clustered.\r\n            e => e.Property(x => x.EmailAddress)); \r\n  }\r\n}\r\n```\r\n\r\n### Notes\r\n\r\nAfter publishing this, I was informed that there is an active pull request [here](https://entityframework.codeplex.com/SourceControl/network/forks/BrandonDahler/EntityFramework/contribution/7954) to add something similar directly into Entity Framework.  If/when that is merged, you should probably use it instead.  Though, this one should continue to work without issue.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}